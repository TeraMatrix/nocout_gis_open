#!/usr/bin/python

"""
Radwin service throughput Poller script.

Poller script determines the throughput of port.
poller script takes the snmp value of OID .1.3.6.1.4.1.4458.1000.2.2.14.0 from snmp agent of device at specific interval.
port service throughput information is sent to device application 


"""
# #############################################################
# Function : check_radwin_service_throughput
#
# Parameters : info (SNMP output), _no_params (scripts params)
#
# Output:   service state,plugin output ,peformance data
###############################################################

import logging

import os

try:
    log_file = "nocout/log_plugins.log"
    with open(log_file, 'a+') as f:
        pass
    logging.basicConfig(filename=log_file, level=logging.CRITICAL)
except:
    pass

def check_radwin_service_throughput(item, _no_params, info):
    """
                check_radwin_service_throughput function calculates the service throughput of port

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service ._no_params in this case.

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : Device service_throughput is 230000

                        performance_data  (list):
                                        performance data
                                        Example: Service_throughput=230000;;;;
                        Raises:
                                ValueError ,Exception
    """
    state = 3
    service_throughput = None
    infotext = "unknown output"
    try:
        logging.debug("radwin_service_throughput SNMP Output %s", info)
        service_throughput = int(info[0][0])
        if service_throughput == 0 or service_throughput < -1:
            state = 0
            infotext = "Device service throughput is Zero or negative"
        else:
            state = 0
            infotext = "Device service_throughput is %d " % service_throughput
    except ValueError:
        infotext = "type mismatch value"
        logging.critical("radwin_service_throughput %s", infotext, exc_info=True)
    except:
        infotext = "unknown value"
        logging.critical("radwin_service_throughput %s", infotext, exc_info=True)
    return (state, infotext, [("service_throughput", service_throughput)])


check_info["radwin_service_throughput"] = {
'check_function': check_radwin_service_throughput,
'service_description': 'radwin_service_throughput',
'has_perfdata': True,

}

#################################################################################
#		SNMP OID
#################################################################################
snmp_info["radwin_service_throughput"] = ( ".1.3.6.1.4.1.4458.1000.2.2", ["14.0"] )
