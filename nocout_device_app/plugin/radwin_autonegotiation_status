#!/usr/bin/python

"""
Auto negotation status of port Poller script.

This is part of device application. 
Poller script determines whether port supports the Auto negotiation functionality or not.
poller script takes the snmp value of OID .1.3.6.1.4.1.4458.1000.1.3.2.1.6 from snmp agent of device at specific interval.
All ports auto negotiation specific information is sent to device application 

"""


def portstatus(st):
    names = {'1': 'Auto', '10': 'forceHalfDuplex10Mbps',
             '11': 'forcefullDuplex10Mbps', '15': 'forceHalfDuplex100Mbps',
             '16': 'forcefullDuplex100Mbps', '6556': 'unknown value'}
    return names.get(st)


# ###############################################################################
# Function : check_radwin_autonegotiation_status
#
# Parameters: info(SNMP Output ,_no_params(NO parameter))
#
# Output: service state,plugin output and performance data
# ###############################################################################



def check_radwin_autonegotiation_status(item, _no_params, info):
    """
                check_radwin_autonegotiation_status function calculates the port autonegotiation status.

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : OK - [port 1]forcefullDuplex100Mbps [port 2]Auto [port 3]Auto

                        performance_data  (list):
                                        performance data
                                        Example: 1=forcefullDuplex100Mbps;;;; 2=Auto;;;; 3=Auto;;;;
                        Raises:
                                ValueError ,Exception
    """
    state = 3
    infotext = "unknown_value"
    port_status_list = ['']
    try:
        if info:
            port_status_list = []
            infotext = ""
            for index in range(len(info)):
                port_status = info[index][0]
                port_status_string = portstatus(str(port_status))
                if port_status_string == None:
                    port_status_string = "unknown_port_status"
                port_status_list.append((str(index + 1), port_status_string))

            for index, status in port_status_list:
                infotext += "[port %s]%s " % (index, status)
            state = 0
    except ValueError:
        infotext = "type_mismatch_value"
    except:
        infotext = "unknown_value"
    return (state, infotext, port_status_list)


check_info["radwin_autonegotiation_status"] = {
'check_function': check_radwin_autonegotiation_status,
'service_description': 'radwin_autonegotiation_status',
'has_perfdata': True,
}
############################################################################
#	SNMP OID for the port autonegotiation status
############################################################################
snmp_info["radwin_autonegotiation_status"] = ( ".1.3.6.1.4.1.4458.1000.1.3.2.1", ["6"] )

