#!/usr/bin/python
import re
"""
Uplink utilizationPoller script

This is part of device application. 
Poller script determines the port current Uplink utilization in terms of number of octets in downlink direction.
poller script takes the snmp value of OID .1.3.6.1.2.1.2.2.1.10 from snmp agent of device at specific interval.
Total Uplink utilization is sent to device application 

"""
# ###################################################
# Function: check_radwin_ul_utilization
#
#Parameters:info(SNMP Output of specific oid of ul utilization) _no_params (currently no support of parameters)
#
#Output: Service state ,plugin output and performance data output
#
###################################################


def check_radwin_ul_utilization(item, _no_params, info):
    """
                check_radwin_ul_utilization calculates the port uplink utilization

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : [port_1] ul_utilization:233333

                        performance_data  (list):
                                        performance data
                                        Example: port_1=233333;;;;;
                        Raises:
                                ValueError ,Exception
    """
    state = 3
    infotext = "unknown_value"
    status_list = ['']
    try:
        if info:
            status_list = []
            infotext = ""
            for index in range(len(info)):
                link_in_octets = info[index][1]
                if_name = info[index][0]
                if if_name == None:
                    if_name = "unknown interface name"
		if_name = re.sub('[^0-9a-zA-Z-_]+', '_', if_name)
                status_list.append((if_name, saveint(link_in_octets)))
            for name, in_octets in status_list:
                infotext += "[%s] ul_utilization:%s" % (name, in_octets)
            state = 0
    except ValueError:
        infotext = "type_mismatch_error"
    except:
        infotext = "unkown_value"
    return (state, infotext, status_list)


check_info["radwin_ul_utilization"] = {
    'check_function': check_radwin_ul_utilization,
    'service_description': 'radwin_ul_utilization',
    'has_perfdata': True,
}

#################################################################
# SNMP OID Of the poller_script parameters 
#################################################################
snmp_info["radwin_ul_utilization"] = ( ".1.3.6.1.2.1.2.2.1", ["2", "10"] )
