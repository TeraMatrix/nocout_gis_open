#!/usr/bin/python

"""
Ethernet port mode Poller script.

Poller script determines the radwin port speed and port mode.
poller script takes the snmp value of OID .1.3.6.1.4.1.4458.1000.1.3.2.1.7.1 from snmp agent of device at specific interval.
Ethernet port mode status information is sent to device application 

"""

# ######################################################################
# Function : check_radwin_port_mode_status
#
# Parameters : info(SNMP output) _no_params (No parameters)
#
# Output: Plugin output ,service state and performance data
#####################################################################
import logging

import os

try:
    log_file = "nocout/log_plugins.log"
    with open(log_file, 'a+') as f:
        pass
    logging.basicConfig(filename=log_file, level=logging.CRITICAL)
except:
    pass


def port_mode(st):
    names = {'1': 'notConnected', '10': 'connectedHalfDuplex',
             '11': 'connectedFullDuplex', '15': 'connectedHalfDuplex',
             '16': 'connectedFullDuplex', '6556': 'unknown'}
    return names.get(st)


def check_radwin_port_mode_status(item, _no_params, info):
    """
                check_radwin_port_mode_status function calculates the port mode

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : [port port_1] FullDuplex

                        performance_data  (list):
                                        performance data
                                        Example: port_1 = FullDuplex;;;;
                        Raises:
                                ValueError ,Exception
    """
    state = 3
    infotext = "unknown output"
    port_status_list = ['']
    try:
        logging.debug("radwin_port_mode_status SNMP Output %s", info)
        port_status_list = []
        if not info[0]:
            raise ValueError
        port_status_list = []
        infotext = ""
        for index in range(len(info)):
            port_mode_value = info[index][0]
            port_mode_string = port_mode(str(port_mode_value))
            if port_mode_string == None:
                port_mode_string = "unknown_port_mode"
            port_status_list.append((str(index + 1), port_mode_string))

        for index, port_status in port_status_list:
            infotext += "[port %s] %s" % (index, port_status)
        state = 0
    except ValueError:
        infotext = "interface status type mismatch"
        logging.critical("radwin_port_mode_status %s", infotext, exc_info=True)
    except:
        infotext = "unknown value"
        logging.critical("radwin_port_mode_status %s", infotext, exc_info=True)
    return (state, infotext, port_status_list)


check_info["radwin_port_mode_status"] = {
    'check_function': check_radwin_port_mode_status,
    'service_description': 'radwin_port_mode_status',
    'has_perfdata': True,
}
#################################################################
#	SNMP OID
#################################################################
snmp_info["radwin_port_mode_status"] = ( ".1.3.6.1.4.1.4458.1000.1.3.2.1", ["7"] )
                                                                                         

