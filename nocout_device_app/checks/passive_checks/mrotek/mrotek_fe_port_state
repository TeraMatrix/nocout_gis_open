#!/usr/bin/python
"""
Link Ethernet Poller script.

This is part of device application. 
Poller script determines the all ports ethernet status. 
poller script takes the snmp value of OID .1.3.6.1.2.1.2.2.1.8 from snmp agent of device at specific interval.
all ports status are sent to device application 

"""

# ####################################################################################
# Function : check_mrotek_fe_port_state
#
#Parameters: info (SNMP output ) _no_params ( No Parameters)
#
#Output: plugin output ,service state,performance data
#####################################################################################


def port_state_value(st):
    """
        utility function for mapping the interget OID value to string status.
    """
    names = {'1': 'up', '2': 'down'}
    return names.get(st)


def check_mrotek_fe_port_state(item, _no_params, info):
    """
                check_mrotek_fe_port_state function calculates the link ethernet status of the port 

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : [Management_Port_on_Odu]up [Radio_Interface]up

                        performance_data  (list):
                                        performance data
                                        Example: Management_Port_on_Odu=up;;;; Radio_Interface=up;;;;
                        Raises:
                                ValueError ,Exception
    """
    state = 3
    infotext = "unknown_value"
    port_state_list = []
    port_string = "fe_"
    try:
	port_state_list = []
        infotext = ""
        for index in range(1,len(info)):
		port_state = info[index][0]
		port_state = port_state_value(str(port_state))
                if port_state == None:
                    port_state = "unknown_port_state"
                port_state_list.append((port_string+"%s" % (index) + "_state", port_state))
		state = 0
		if int(info[index][0]) == 2:
			state =2
	for index, port_state in port_state_list:
                infotext += "[port %s] %s" % (index, port_state)

    except ValueError :	
        infotext = "type_mismatch_value"
    except:
        infotext = "unknown_value"

    return (state, infotext, port_state_list)


check_info["mrotek_fe_port_state"] = {
    'check_function': check_mrotek_fe_port_state,
    'service_description': 'mrotek_fe_port_state',
    'has_perfdata': True,
    'snmp_info': ( ".1.3.6.1.4.1.8886.6.1.1.4.1.1", ["6"] ),
}

#####################################################################
#snmp OID corrosponding to ports ethernet status.
######################################################################
