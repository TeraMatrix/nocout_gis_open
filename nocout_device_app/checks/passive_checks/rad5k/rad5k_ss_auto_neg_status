#!/usr/bin/python
# ######################################################################
# Function: check_rad5k_ss_auto_neg_status
#
# Parameters: info (SNMP Ouput) _no_params (No Parameters)
#
# Output: service state ,plugin output
# ######################################################################
get_autoneg = { 
	1 : 'portAutoSense',
	5 : 'portAutoSense100Mbps',
	10 : 'forceHalfDuplex10Mbps',
	11 : 'forceFullDuplex10Mbps',
	15 : 'forceHalfDuplex100Mbps',
	16 : 'forceFullDuplex100Mbps',
	21 : 'forceFullDuplex1000Mbps',
	254 : 'disablePoePort',
	255 : 'disablePort'}
	
def check_rad5k_ss_auto_neg_status(item, _no_params, info):
   
    """
            check_rad5k_ss_auto_neg_status function calculates the uplink utilization

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                    state (int) :
                                    0 : OK
                                    1 : Warning
                                    2: Critical
                                    3: unknown
                    infotext(string):
                                    plugin output
                                    Example : OK - autonegotiation - forceFullDuples100Mbps

                    Raises:
                            ValueError ,Exception

    """ 
    state = 3
    infotext = "unknown_value"
    autoneg = ""        
    try:
        if info:
            if info[0][0]:
		x = int(info[0][0])
		if get_autoneg.get(x):					
			autoneg = get_autoneg.get(x)
			state = 0
			infotext = "autonegotiation : %s " % autoneg                                 
    except ValueError :
	infotext = "type_mismatch_value"
    except:
	infotext = "unknown_value"
		
    return (state,infotext,[("autonegotiation",autoneg)])
                
check_info["rad5k_ss_auto_neg_status"] = {
    'check_function' :  check_rad5k_ss_auto_neg_status,
    'service_description' : "rad5k_ss_auto_neg_status",
    'has_perfdata': True
}
#########################################################################
#       SNMP OID for Autonegotiation status
#########################################################################
snmp_info['rad5k_ss_auto_neg_status'] = (".1.3.6.1.4.1.4458.1000.1.3.2.1",["7.1"])
