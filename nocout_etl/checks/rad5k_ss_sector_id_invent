#!/usr/bin/python

# ######################################################################
# Function: check_rad5k_ss_sector_id_invent
#
# Parameters: info (SNMP Ouput) _no_params (No Parameters)
#
# Output: service state ,plugin output
# ######################################################################

def check_rad5k_ss_sector_id_invent(item, _no_params, info):
	"""
            check_rad5k_ss_sector_id function calculates the uplink utilization

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                    state (int) :
                                    0 : OK
                                    1 : Warning
                                    2: Critical
                                    3: unknown
                    infotext(string):
                                    plugin output
                                    Example : OK - sector id : HBS1Krishna_Complex 

                    Raises:
                            ValueError ,Exception

	""" 
	state =3 
	infotext = "unknown_value"	
	sector_id = ""
	try:
		if info:
			if info[0][0]:
				sector_id = str(info[0][0])
				sector_id = sector_id.replace(' ','_')
				state = 0
				infotext = "sector id : %s" % sector_id
		
	except ValueError :
		infotext = "type_mismatch_value"
	except:
		infotext = "unknown_value"
	return(state,infotext,[("sector_id",sector_id)])

check_info["rad5k_ss_sector_id_invent"] = {
	'check_function' : check_rad5k_ss_sector_id_invent,
	'service_description' : "rad5k_ss_sector_id_invent",
	'has_perfdata' : True
}

#########################################################################
#       SNMP OID for the Sector id
#########################################################################
snmp_info["rad5k_ss_sector_id_invent"] = (".1.3.6.1.4.1.4458.1000.1.5",["3.0"])

